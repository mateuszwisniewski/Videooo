apply plugin: 'jacoco'

def test = rootProject.ext.testing

jacoco {
    toolVersion = "$test.jacoco"
}

def moduleExcludes = [
        'app' : ['**/R.class',
                 '**/R$*.class',
                 '**/*$ViewInjector*.*',
                 '**/*$ViewBinder*.*',
                 '**/BuildConfig.*',
                 '**/Manifest*.*',
                 '**/VideoooApplication*.*',
                 '**/*Activity.class',
                 '**/*Module*.*',
                 '**/*Component*.*',
                 '**/data/**'],
        'core':
                ['**/data/**']
]

def moduleClassDirs = [
        'app' : 'build/intermediates/classes/debug',
        'core': 'build/classes'
]

def moduleJacocoExec = [
        'app' : 'build/jacoco/testDebugUnitTest.exec',
        'core': 'build/jacoco/test.exec'
]

task testReport(type: JacocoReport, dependsOn: "test") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports..."

    classDirectories = fileTree(
            dir: moduleClassDirs[project.name],
            excludes: moduleExcludes[project.name]
    )

    def coverageSourceDirs = [
            "src/main/java"
    ]
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files(moduleJacocoExec[project.name])

    reports {
        html.enabled true
        csv.enabled false
        xml {
            enabled true
            destination "${buildDir}/reports/jacoco/report.xml"
        }
    }
}