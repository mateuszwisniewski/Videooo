final def keystoreProperties = rootProject.file('secure/keystore.properties')
final def tmdbProperties = rootProject.file('secure/tmdb.properties')

ext {
    configuration = [
            tmdb_api_key: getProperty('tmdb_api_key', tmdbProperties)
    ]

    signing = [
            keystore         : getProperty('keystore', keystoreProperties),
            keystore_password: getProperty('keystore_password', keystoreProperties),
            alias            : getProperty('alias', keystoreProperties),
            alias_password   : getProperty('alias_password', keystoreProperties)
    ]
}

buildscript {
    apply from: 'dependencies.gradle'
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$androidGradlePluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

static def getProperty(String prop, File propsFile) {
    if (propsFile.exists()) {
        //if the user has a properties file, get the username and pass from there
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[prop]
    } else {
        //if not, try the environment variables (for ci / build servers)
        return System.getenv(prop)
    }
}
