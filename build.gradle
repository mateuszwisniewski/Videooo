final def keystoreProperties = rootProject.file('secure/keystore.properties')
final def tmdbProperties = rootProject.file('secure/tmdb.properties')

ext {
    configuration = [
            application_id     : 'com.wisnia.videooo',
            build_tools_version: '28.0.3',
            compile_sdk_version: 28,
            min_sdk_version    : 19,
            target_sdk_version : 28,
            version_code       : 1,
            version_name       : '0.1.0',
            tmdb_api_key       : getProperty('tmdb_api_key', tmdbProperties)
    ]

    library = [
            kotlin              : '1.2.61',
            android_architecture: '1.1.1',
            android_support     : '28.0.0',
            constraint_layout   : '1.1.3',
            dagger              : '2.15',
            okhttp              : '3.8.0',
            gson                : '2.8.0',
            rxandroid           : '2.0.1',
            rxjava              : '2.1.0',
            retrofit            : '2.3.0',
            inject              : '1'
    ]

    testing = [
            junit   : '4.12',
            mockito : '2.7.22',
            espresso: '2.2.2',
    ]

    signing = [
            keystore         : getProperty('keystore', keystoreProperties),
            keystore_password: getProperty('keystore_password', keystoreProperties),
            alias            : getProperty('alias', keystoreProperties),
            alias_password   : getProperty('alias_password', keystoreProperties)
    ]

    quality = [
            jacoco     : '0.7.9',
            ktlint     : '0.11.1',
            config_dir : "${project.rootDir}/quality/config",
            reports_dir: "${project.buildDir}/reports"
    ]
}

buildscript {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.21"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:1.3.21"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

static def getProperty(String prop, File propsFile) {
    if (propsFile.exists()) {
        //if the user has a properties file, get the username and pass from there
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[prop]
    } else {
        //if not, try the environment variables (for ci / build servers)
        return System.getenv(prop)
    }
}
